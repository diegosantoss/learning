{"id":"node_modules/uuid1/index.js","dependencies":[{"name":"C:\\projects\\personal\\learning\\udemy\\react-redux-profissional\\myapp\\package.json","includedInParent":true,"mtime":1589254612351},{"name":"C:\\projects\\personal\\learning\\udemy\\react-redux-profissional\\myapp\\.babelrc","includedInParent":true,"mtime":1589241660722},{"name":"C:\\projects\\personal\\learning\\udemy\\react-redux-profissional\\myapp\\node_modules\\uuid1\\package.json","includedInParent":true,"mtime":1589254611918},{"name":"./random","loc":{"line":1,"column":21},"parent":"C:\\projects\\personal\\learning\\udemy\\react-redux-profissional\\myapp\\node_modules\\uuid1\\index.js","resolved":"C:\\projects\\personal\\learning\\udemy\\react-redux-profissional\\myapp\\node_modules\\uuid1\\random.js"},{"name":"repeat-string","loc":{"line":2,"column":21},"parent":"C:\\projects\\personal\\learning\\udemy\\react-redux-profissional\\myapp\\node_modules\\uuid1\\index.js","resolved":"C:\\projects\\personal\\learning\\udemy\\react-redux-profissional\\myapp\\node_modules\\uuid1\\node_modules\\repeat-string\\index.js"}],"generated":{"js":"var random = require('./random');\r\nvar repeat = require('repeat-string');\r\n\r\nfunction digits(value, bytes) {\r\n    \r\n    // Converts the value to a string binary representation\r\n    var binValueStr = value.toString(2);  \r\n    \r\n    // Generate an string with zero values    \r\n    var zeroPad = repeat('0000', bytes);\r\n    \r\n    // Pad the binary value withe the zeros on the left\r\n    binValueStr = zeroPad + binValueStr;\r\n \r\n    // Take N bytes from the right, adding a '1' on the left\r\n    binValueStr = '1' + binValueStr.substring(binValueStr.length - (4 * bytes), binValueStr.length);\r\n    \r\n    return parseInt(binValueStr, 2).toString(16).substring(1);   \r\n}\r\n        \r\nfunction getTimeBasedBlocks(millis, addNanos) {\r\n    \r\n    // Convert millis to nanos\r\n    var nanos = millis * 10000;\r\n    \r\n    // Add random nanoseconds\r\n    if (addNanos !== 0) {\r\n        nanos += addNanos;\r\n    }\r\n    \r\n    // Convert the nanos to binary string\r\n    var nanosBinString = nanos.toString(2);\r\n    \r\n    // Get firts block\r\n    var timeBasedBlockValue = digits(parseInt(nanosBinString.substring(0, nanosBinString.length - 32), 2), 8);\r\n    timeBasedBlockValue += '-';\r\n    \r\n    // Get second block\r\n    timeBasedBlockValue += digits(parseInt(nanosBinString.substring(0, nanosBinString.length - 16), 2), 4);\r\n    timeBasedBlockValue += '-';\r\n    \r\n    // Get third block: Random part\r\n    timeBasedBlockValue += digits(parseInt(nanosBinString, 2), 4);\r\n    \r\n    return timeBasedBlockValue;\r\n}\r\n\r\nexports.UUID1 = function() {\r\n    \r\n    // Get the current millis\r\n    var millis = Date.now();\r\n    \r\n    // Return the value\r\n    return exports.fromMillisUUID1(millis);\r\n}\r\n\r\nexports.fromMillisUUID1 = function(millis) {\r\n    \r\n    // Generate the time based blocks adding a random number of nanoseconds\r\n    var uuidString = getTimeBasedBlocks(millis, random.randomInt(0, 10000));\r\n    uuidString += '-';\r\n\r\n    // Convert millis to nanos\r\n    var nanos = millis * 10000;\r\n    \r\n    // Add random nanoseconds\r\n    var randomNanos = random.randomInt(0, 10000);\r\n    nanos += randomNanos;\r\n    \r\n    // Convert the nanos to binary string\r\n    var nanosBinString = nanos.toString(2);\r\n    \r\n    // Get forth block\r\n    uuidString += digits(parseInt(nanosBinString, 2), 4);\r\n    uuidString += '-';\r\n    \r\n    // Get ffith block\r\n    uuidString += digits(parseInt(nanosBinString, 2), 12);\r\n    \r\n    return uuidString;\r\n}\r\n\r\nexports.maxUUID1 = function(millis) {\r\n    \r\n    // Generate the time based blocks\r\n    var uuidString = getTimeBasedBlocks(millis, 9999);\r\n    \r\n    // Add the forth and fifth blocks\r\n    uuidString += '-ffff-ffffffffffff';\r\n    \r\n    return uuidString;\r\n}\r\n\r\nexports.minUUID1 = function(millis) {\r\n    \r\n    // Generate the time based blocks\r\n    var uuidString = getTimeBasedBlocks(millis, 0);\r\n    \r\n    // Add the forth and fifth blocks\r\n    uuidString += '-0000-000000000000';\r\n    \r\n    return uuidString;\r\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/uuid1/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/uuid1/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}}],"sources":{"node_modules/uuid1/index.js":"var random = require('./random');\r\nvar repeat = require('repeat-string');\r\n\r\nfunction digits(value, bytes) {\r\n    \r\n    // Converts the value to a string binary representation\r\n    var binValueStr = value.toString(2);  \r\n    \r\n    // Generate an string with zero values    \r\n    var zeroPad = repeat('0000', bytes);\r\n    \r\n    // Pad the binary value withe the zeros on the left\r\n    binValueStr = zeroPad + binValueStr;\r\n \r\n    // Take N bytes from the right, adding a '1' on the left\r\n    binValueStr = '1' + binValueStr.substring(binValueStr.length - (4 * bytes), binValueStr.length);\r\n    \r\n    return parseInt(binValueStr, 2).toString(16).substring(1);   \r\n}\r\n        \r\nfunction getTimeBasedBlocks(millis, addNanos) {\r\n    \r\n    // Convert millis to nanos\r\n    var nanos = millis * 10000;\r\n    \r\n    // Add random nanoseconds\r\n    if (addNanos !== 0) {\r\n        nanos += addNanos;\r\n    }\r\n    \r\n    // Convert the nanos to binary string\r\n    var nanosBinString = nanos.toString(2);\r\n    \r\n    // Get firts block\r\n    var timeBasedBlockValue = digits(parseInt(nanosBinString.substring(0, nanosBinString.length - 32), 2), 8);\r\n    timeBasedBlockValue += '-';\r\n    \r\n    // Get second block\r\n    timeBasedBlockValue += digits(parseInt(nanosBinString.substring(0, nanosBinString.length - 16), 2), 4);\r\n    timeBasedBlockValue += '-';\r\n    \r\n    // Get third block: Random part\r\n    timeBasedBlockValue += digits(parseInt(nanosBinString, 2), 4);\r\n    \r\n    return timeBasedBlockValue;\r\n}\r\n\r\nexports.UUID1 = function() {\r\n    \r\n    // Get the current millis\r\n    var millis = Date.now();\r\n    \r\n    // Return the value\r\n    return exports.fromMillisUUID1(millis);\r\n}\r\n\r\nexports.fromMillisUUID1 = function(millis) {\r\n    \r\n    // Generate the time based blocks adding a random number of nanoseconds\r\n    var uuidString = getTimeBasedBlocks(millis, random.randomInt(0, 10000));\r\n    uuidString += '-';\r\n\r\n    // Convert millis to nanos\r\n    var nanos = millis * 10000;\r\n    \r\n    // Add random nanoseconds\r\n    var randomNanos = random.randomInt(0, 10000);\r\n    nanos += randomNanos;\r\n    \r\n    // Convert the nanos to binary string\r\n    var nanosBinString = nanos.toString(2);\r\n    \r\n    // Get forth block\r\n    uuidString += digits(parseInt(nanosBinString, 2), 4);\r\n    uuidString += '-';\r\n    \r\n    // Get ffith block\r\n    uuidString += digits(parseInt(nanosBinString, 2), 12);\r\n    \r\n    return uuidString;\r\n}\r\n\r\nexports.maxUUID1 = function(millis) {\r\n    \r\n    // Generate the time based blocks\r\n    var uuidString = getTimeBasedBlocks(millis, 9999);\r\n    \r\n    // Add the forth and fifth blocks\r\n    uuidString += '-ffff-ffffffffffff';\r\n    \r\n    return uuidString;\r\n}\r\n\r\nexports.minUUID1 = function(millis) {\r\n    \r\n    // Generate the time based blocks\r\n    var uuidString = getTimeBasedBlocks(millis, 0);\r\n    \r\n    // Add the forth and fifth blocks\r\n    uuidString += '-0000-000000000000';\r\n    \r\n    return uuidString;\r\n}"},"lineCount":103}},"error":null,"hash":"870aab384d3125d9d92138cd84f8e3a0","cacheData":{"env":{}}}